;; This file was automatically generated by SWIG (http://www.swig.org).
;; Version 1.3.39
;;
;; Do not make changes to this file unless you know what you are doing--modify
;; the SWIG interface file instead.

(defpackage :magic_ffi
  (:use :common-lisp :ffi)
  (:export
	:magic_open
	:magic_close
	:magic_file
	:magic_descriptor
	:magic_buffer
	:magic_error
	:magic_setflags
	:magic_load
	:magic_compile
	:magic_check
	:magic_errno))

(in-package :magic_ffi)

(default-foreign-language :stdc)


(ffi:def-call-out magic_open
	(:name "magic_open")
	(:arguments (arg0 ffi:int))
	(:return-type magic_t)
	(:library +library-name+))

(ffi:def-call-out magic_close
	(:name "magic_close")
	(:arguments (arg0 magic_t))
	(:library +library-name+))

(ffi:def-call-out magic_file
	(:name "magic_file")
	(:arguments (arg0 magic_t)
		(arg1 ffi:c-string))
	(:return-type ffi:c-string)
	(:library +library-name+))

(ffi:def-call-out magic_descriptor
	(:name "magic_descriptor")
	(:arguments (arg0 magic_t)
		(arg1 ffi:int))
	(:return-type ffi:c-string)
	(:library +library-name+))

(ffi:def-call-out magic_buffer
	(:name "magic_buffer")
	(:arguments (arg0 magic_t)
		(arg1 (ffi:c-pointer NIL))
		(arg2 size_t))
	(:return-type ffi:c-string)
	(:library +library-name+))

(ffi:def-call-out magic_error
	(:name "magic_error")
	(:arguments (arg0 magic_t))
	(:return-type ffi:c-string)
	(:library +library-name+))

(ffi:def-call-out magic_setflags
	(:name "magic_setflags")
	(:arguments (arg0 magic_t)
		(arg1 ffi:int))
	(:return-type ffi:int)
	(:library +library-name+))

(ffi:def-call-out magic_load
	(:name "magic_load")
	(:arguments (arg0 magic_t)
		(arg1 ffi:c-string))
	(:return-type ffi:int)
	(:library +library-name+))

(ffi:def-call-out magic_compile
	(:name "magic_compile")
	(:arguments (arg0 magic_t)
		(arg1 ffi:c-string))
	(:return-type ffi:int)
	(:library +library-name+))

(ffi:def-call-out magic_check
	(:name "magic_check")
	(:arguments (arg0 magic_t)
		(arg1 ffi:c-string))
	(:return-type ffi:int)
	(:library +library-name+))

(ffi:def-call-out magic_errno
	(:name "magic_errno")
	(:arguments (arg0 magic_t))
	(:return-type ffi:int)
	(:library +library-name+))
